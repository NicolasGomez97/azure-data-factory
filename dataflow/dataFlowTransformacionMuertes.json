{
	"name": "dataFlowTransformacionMuertes",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_muertes_http_bl",
						"type": "DatasetReference"
					},
					"name": "muertesCsvRaw"
				},
				{
					"dataset": {
						"referenceName": "ds_dimension_fecha",
						"type": "DatasetReference"
					},
					"name": "sourceFechas"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dataflow_processed",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_dataflow_paquet",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "filtermuertes"
				},
				{
					"name": "selectioneuropemuerte"
				},
				{
					"name": "muertespivot"
				},
				{
					"name": "condicionalpSplit1"
				},
				{
					"name": "derivedColumnFechas"
				},
				{
					"name": "muestesfechasenriquecido"
				},
				{
					"name": "sortedgeorgiacases"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as string,",
				"          indicator as string,",
				"          daily_count as integer,",
				"          date as string,",
				"          rate_14_day as string,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     limit: 0,",
				"     ignoreNoFilesFound: false) ~> muertesCsvRaw",
				"source(output(",
				"          fecha_id as string,",
				"          fecha as string,",
				"          year as string,",
				"          mes as string,",
				"          dia as string,",
				"          year_mes as string,",
				"          year_semana as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceFechas",
				"muertesCsvRaw filter(continent == 'Europe') ~> filtermuertes",
				"filtermuertes select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          daily_count,",
				"          date_process = date,",
				"          source,",
				"          each(match(true()),",
				"               'casos_'+$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectioneuropemuerte",
				"selectioneuropemuerte pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          daily_count,",
				"          date_process,",
				"          source),",
				"     pivotBy(indicator, ['confirmed case', 'deaths']),",
				"     count = sum(daily_count),",
				"     columnNaming: '$N_$V',",
				"     lateral: true) ~> muertespivot",
				"muertespivot split(country == 'Georgia' || country_code == 'GEO',",
				"     disjoint: false) ~> condicionalpSplit1@(Georgiacountry, restcountries)",
				"sourceFechas derive({añomesdia} = year + '-0' + mes + iif(toInteger(dia)<10, \"-0\"+dia, \"-\"+dia)) ~> derivedColumnFechas",
				"condicionalpSplit1@restcountries, derivedColumnFechas join(date_process == {añomesdia},",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> muestesfechasenriquecido",
				"condicionalpSplit1@Georgiacountry sort(asc({count_confirmed case}, false)) ~> sortedgeorgiacases",
				"sortedgeorgiacases sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"muestesfechasenriquecido sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          daily_count,",
				"          date_process,",
				"          source,",
				"          count_confirmed_case = {count_confirmed case},",
				"          count_deaths,",
				"          fecha_id,",
				"          fecha,",
				"          year,",
				"          mes,",
				"          dia,",
				"          year_mes,",
				"          year_semana,",
				"          {añomesdia}",
				"     )) ~> sink2"
			]
		}
	}
}