{
	"name": "dataflowMovies",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "inputCSV_movies",
						"type": "DatasetReference"
					},
					"name": "Movies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputCSV_movies",
						"type": "DatasetReference"
					},
					"name": "MoviesClean"
				},
				{
					"dataset": {
						"referenceName": "OutputCSV_movies",
						"type": "DatasetReference"
					},
					"name": "MoviesbyYear"
				}
			],
			"transformations": [
				{
					"name": "YearExtraction"
				},
				{
					"name": "MobiesCount"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Movies",
				"Movies derive(year = toInteger(trim(right(title, 6), '()')),",
				"          title = toString(left(title, length(title)-6))) ~> YearExtraction",
				"YearExtraction aggregate(groupBy(year),",
				"     MoviesCount = count()) ~> MobiesCount",
				"YearExtraction sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['movies-clean.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> MoviesClean",
				"MobiesCount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['MobiesbyYear.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> MoviesbyYear"
			]
		}
	}
}